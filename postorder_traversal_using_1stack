Postorder Traversal of Binary tree using 1 stack


class Solution {
public:
void solve(TreeNode* root, vector<int>&ans){
    if(root==nullptr){
        return;
    }

    TreeNode* curr = root;
    stack<TreeNode*>st;
    
    while(curr!=nullptr|| !st.empty()){
        if(curr!=nullptr){
            st.push(curr);
            curr=curr->left;
        } else {
            TreeNode* temp = st.top()->right;
            if(temp==nullptr){
                temp=st.top();
                st.pop();
                ans.push_back(temp->val);
                while(!st.empty()&& temp==st.top()->right){
                    temp=st.top();
                    st.pop();
                    ans.push_back(temp->val);
                }
            }else {
                curr= temp;
            }
        }
    }
}
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int>ans;
        solve(root, ans);
        return ans;
    }
};
